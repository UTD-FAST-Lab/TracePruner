# Use the Python slim image as the base
FROM python:3.10

# Install dependencies: wget, gnupg for keys, and software-properties-common to add repositories
RUN apt-get update && apt-get install -y \
wget \
gnupg \
software-properties-common \
unzip \
&& rm -rf /var/lib/apt/lists/*

# Add the Temurin OpenJDK 8 repository for Java installation
RUN wget -qO - https://packages.adoptium.net/artifactory/api/gpg/key/public | gpg --dearmor | tee /usr/share/keyrings/adoptium.gpg > /dev/null \
&& echo "deb [signed-by=/usr/share/keyrings/adoptium.gpg] https://packages.adoptium.net/artifactory/deb focal main" | tee /etc/apt/sources.list.d/adoptium.list \
&& apt-get update && apt-get install -y temurin-8-jdk \
&& rm -rf /var/lib/apt/lists/*

RUN wget -q -O - https://get.haskellstack.org/ | sh
# Install Haskell's stack tool using its official script

# Copy your Python scripts and other files
COPY . /cgpruner

# Set the working directory inside the container
WORKDIR /cgpruner

# Install Python dependencies (if any)
RUN pip install -r requirements.txt


# Build the javaq Haskell project (combine cd and stack build)
RUN cd javaq && stack build

# Set PATH to include the javaq executable from .stack-work/bin
ENV PATH="/cgpruner/javaq/.stack-work/install/x86_64-linux*/*/*/bin:$PATH"

# Add the entrypoint script to handle dataset and output folder setup
COPY entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

# Set the entrypoint to the custom script
# ENTRYPOINT ["/entrypoint.sh"]
CMD ["bash"]

# Set the default command for the container to open a bash shell
