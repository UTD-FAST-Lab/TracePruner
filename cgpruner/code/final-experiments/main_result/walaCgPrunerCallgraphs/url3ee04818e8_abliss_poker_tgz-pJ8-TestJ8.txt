Test.main:([Ljava/lang/String;)V,109,Hand.compareTo:(LHand;)I
Card$Rank.<clinit>:()V,114,Card$Rank$9.<init>:(Ljava/lang/String;I)V
Card$Suit$2.<init>:(Ljava/lang/String;I)V,4,Card$Suit.<init>:(Ljava/lang/String;ILCard$1;)V
Distribution.generate:(Ljava/util/Collection;LDeck;)LDistribution;,112,Distribution.generate:(Ljava/util/Collection;LDeck;)LDistribution;
Card$Suit$1.<init>:(Ljava/lang/String;I)V,4,Card$Suit.<init>:(Ljava/lang/String;ILCard$1;)V
Hand.getHandValues:()Ljava/util/Map;,18,Deck.<init>:()V
Distribution.generate:(Ljava/util/Collection;LDeck;)LDistribution;,138,Distribution.<init>:(Ljava/util/Collection;)V
com/google/common/collect/Iterators.singletonIterator:(Ljava/lang/Object;)Lcom/google/common/collect/UnmodifiableIterator;,5,com/google/common/collect/Iterators$13.<init>:(Ljava/lang/Object;)V
Hand.playableHand:()Ljava/util/List;,311,com/google/common/collect/ImmutableList.of:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;
<boot>,0,com/google/common/collect/Collections2.<clinit>:()V
Card$Rank.<init>:(Ljava/lang/String;ILCard$1;)V,3,Card$Rank.<init>:(Ljava/lang/String;I)V
<boot>,0,com/google/common/collect/Iterators.<clinit>:()V
Distribution.generate:(Ljava/util/Collection;LDeck;)LDistribution;,55,Deck.asList:()Ljava/util/List;
com/google/common/collect/Multisets.addAllImpl:(Lcom/google/common/collect/Multiset;Ljava/util/Collection;)Z,36,com/google/common/collect/AbstractMapBasedMultiset$1.hasNext:()Z
com/google/common/collect/Multisets.addAllImpl:(Lcom/google/common/collect/Multiset;Ljava/util/Collection;)Z,89,com/google/common/collect/Iterators.addAll:(Ljava/util/Collection;Ljava/util/Iterator;)Z
com/google/common/collect/ImmutableList.of:(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;,5,com/google/common/collect/SingletonImmutableList.<init>:(Ljava/lang/Object;)V
com/google/common/collect/Lists.computeArrayListCapacity:(I)I,9,com/google/common/base/Preconditions.checkArgument:(Z)V
Hand.playableHand:()Ljava/util/List;,16,com/google/common/collect/Lists.newArrayListWithExpectedSize:(I)Ljava/util/ArrayList;
com/google/common/collect/Multisets$UnmodifiableMultiset.<init>:(Lcom/google/common/collect/Multiset;)V,1,com/google/common/collect/ForwardingMultiset.<init>:()V
com/google/common/collect/Multisets.addAllImpl:(Lcom/google/common/collect/Multiset;Ljava/util/Collection;)Z,19,com/google/common/collect/Multisets.cast:(Ljava/lang/Iterable;)Lcom/google/common/collect/Multiset;
com/google/common/collect/Sets.newHashSet:(Ljava/lang/Iterable;)Ljava/util/HashSet;,27,com/google/common/collect/Sets.newHashSet:(Ljava/util/Iterator;)Ljava/util/HashSet;
Test.main:([Ljava/lang/String;)V,163,Distribution.generate:(Ljava/util/Collection;LDeck;)LDistribution;
Card$Rank.<clinit>:()V,59,Card$Rank$5.<init>:(Ljava/lang/String;I)V
com/google/common/collect/ImmutableList.copyOf:(Ljava/util/Collection;)Lcom/google/common/collect/ImmutableList;,16,com/google/common/collect/SingletonImmutableList.isPartialView:()Z
com/google/common/collect/Lists.newArrayList:(Ljava/lang/Iterable;)Ljava/util/ArrayList;,32,com/google/common/collect/Lists.newArrayList:(Ljava/util/Iterator;)Ljava/util/ArrayList;
com/google/common/collect/EmptyImmutableList.<init>:()V,1,com/google/common/collect/ImmutableList.<init>:()V
Distribution.generate:(Ljava/util/Collection;LDeck;)LDistribution;,32,Distribution.<init>:(Ljava/util/Collection;)V
com/google/common/collect/EmptyImmutableList.iterator:()Lcom/google/common/collect/UnmodifiableIterator;,0,com/google/common/collect/Iterators.emptyIterator:()Lcom/google/common/collect/UnmodifiableIterator;
Distribution.generate:(Ljava/util/Collection;LDeck;)LDistribution;,115,Distribution.getHands:()Ljava/util/Collection;
Deck.<init>:()V,71,Card.<init>:(LCard$Rank;LCard$Suit;)V
com/google/common/base/Joiner$MapJoiner.<init>:(Lcom/google/common/base/Joiner;Ljava/lang/String;Lcom/google/common/base/Joiner$1;)V,3,com/google/common/base/Joiner$MapJoiner.<init>:(Lcom/google/common/base/Joiner;Ljava/lang/String;)V
com/google/common/collect/AbstractMapBasedMultiset.entryIterator:()Ljava/util/Iterator;,21,com/google/common/collect/AbstractMapBasedMultiset$1.<init>:(Lcom/google/common/collect/AbstractMapBasedMultiset;Ljava/util/Iterator;)V
com/google/common/collect/TreeMultiset.addAll:(Ljava/util/Collection;)Z,2,com/google/common/collect/AbstractMultiset.addAll:(Ljava/util/Collection;)Z
Card$Rank.<clinit>:()V,46,Card$Rank$4.<init>:(Ljava/lang/String;I)V
com/google/common/collect/SingletonImmutableList.iterator:()Ljava/util/Iterator;,1,com/google/common/collect/SingletonImmutableList.iterator:()Lcom/google/common/collect/UnmodifiableIterator;
<boot>,0,com/google/common/collect/Maps.<clinit>:()V
Hand.canPlay:(Ljava/util/List;)Z,17,com/google/common/collect/AbstractIndexedListIterator.hasNext:()Z
com/google/common/collect/Lists.newArrayList:(Ljava/lang/Iterable;)Ljava/util/ArrayList;,17,com/google/common/collect/Collections2.cast:(Ljava/lang/Iterable;)Ljava/util/Collection;
<boot>,0,Test.main:([Ljava/lang/String;)V
Hand.playableHand:()Ljava/util/List;,382,Hand.canPlay:(Ljava/util/List;)Z
com/google/common/base/Joiner$MapJoiner.<init>:(Lcom/google/common/base/Joiner;Ljava/lang/String;)V,11,com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
com/google/common/collect/EmptyImmutableList.<clinit>:()V,4,com/google/common/collect/EmptyImmutableList.<init>:()V
Hand.playableHand:()Ljava/util/List;,4,Hand.canPlay:(Ljava/util/List;)Z
Hand.<init>:(LDeck;)V,6,Deck.draw:()LCard;
Hand.canPlay:(Ljava/util/List;)Z,10,com/google/common/collect/RegularImmutableList.iterator:()Ljava/util/Iterator;
Hand.playableHand:()Ljava/util/List;,245,com/google/common/collect/ImmutableList.of:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;
com/google/common/collect/Multisets.unmodifiableMultiset:(Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;,29,com/google/common/collect/Multisets$UnmodifiableMultiset.<init>:(Lcom/google/common/collect/Multiset;)V
Hand.getHandValues:()Ljava/util/Map;,95,Hand.<init>:(Ljava/util/Collection;)V
com/google/common/collect/EmptyImmutableList.<clinit>:()V,14,com/google/common/collect/EmptyImmutableList$1.<init>:()V
Deck.without:(LCard;)LDeck;,8,Deck.<init>:(Ljava/util/List;)V
Card$Rank.<clinit>:()V,7,Card$Rank$1.<init>:(Ljava/lang/String;I)V
Hand.getHandValues:()Ljava/util/Map;,59,Deck.size:()I
com/google/common/collect/ImmutableList.<init>:()V,1,com/google/common/collect/ImmutableCollection.<init>:()V
Hand.playableHand:()Ljava/util/List;,344,com/google/common/collect/ImmutableList.of:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;
<boot>,0,com/google/common/collect/ImmutableCollection$EmptyImmutableCollection.<clinit>:()V
com/google/common/collect/Multisets.addAllImpl:(Lcom/google/common/collect/Multiset;Ljava/util/Collection;)Z,58,com/google/common/collect/AbstractMapBasedMultiset$1$1.getElement:()Ljava/lang/Object;
Distribution.generate:(Ljava/util/Collection;LDeck;)LDistribution;,109,Deck.without:(LCard;)LDeck;
com/google/common/collect/ImmutableList.copyOf:(Ljava/util/Collection;)Lcom/google/common/collect/ImmutableList;,32,com/google/common/collect/ImmutableList.copyFromCollection:(Ljava/util/Collection;)Lcom/google/common/collect/ImmutableList;
Hand.<init>:(LCard;LCard;LCard;LCard;)V,26,com/google/common/collect/Lists.newArrayList:([Ljava/lang/Object;)Ljava/util/ArrayList;
com/google/common/collect/Maps.<clinit>:()V,5,com/google/common/base/Joiner.withKeyValueSeparator:(Ljava/lang/String;)Lcom/google/common/base/Joiner$MapJoiner;
com/google/common/collect/AbstractIndexedListIterator.next:()Ljava/lang/Object;,27,com/google/common/collect/Iterators$12.get:(I)Ljava/lang/Object;
Distribution.generate:(Ljava/util/Collection;LDeck;)LDistribution;,25,Hand.<init>:(Ljava/util/Collection;)V
Card$Rank$6.<init>:(Ljava/lang/String;I)V,4,Card$Rank.<init>:(Ljava/lang/String;ILCard$1;)V
Card$Rank.<clinit>:()V,170,Card$Rank$13.<init>:(Ljava/lang/String;I)V
Hand.<init>:(LDeck;)V,17,Hand.<init>:(LCard;LCard;LCard;LCard;)V
com/google/common/collect/ImmutableList.copyOf:(Ljava/util/Collection;)Lcom/google/common/collect/ImmutableList;,16,com/google/common/collect/RegularImmutableList.isPartialView:()Z
Card$Suit.<clinit>:()V,33,Card$Suit$3.<init>:(Ljava/lang/String;I)V
Test.main:([Ljava/lang/String;)V,60,com/google/common/collect/Lists.newArrayList:([Ljava/lang/Object;)Ljava/util/ArrayList;
Card$Rank$9.<init>:(Ljava/lang/String;I)V,4,Card$Rank.<init>:(Ljava/lang/String;ILCard$1;)V
Card$Suit$3.<init>:(Ljava/lang/String;I)V,4,Card$Suit.<init>:(Ljava/lang/String;ILCard$1;)V
Distribution.<init>:(Ljava/util/Collection;)V,5,com/google/common/collect/TreeMultiset.create:()Lcom/google/common/collect/TreeMultiset;
com/google/common/collect/RegularImmutableList.get:(I)Ljava/lang/Object;,5,com/google/common/base/Preconditions.checkElementIndex:(II)I
com/google/common/collect/ImmutableList.copyOf:(Ljava/util/Collection;)Lcom/google/common/collect/ImmutableList;,23,com/google/common/collect/ImmutableList.copyFromCollection:(Ljava/util/Collection;)Lcom/google/common/collect/ImmutableList;
Deck.cardsAt:(IIII)Ljava/util/List;,1,com/google/common/collect/Lists.newArrayListWithExpectedSize:(I)Ljava/util/ArrayList;
Hand.playableHand:()Ljava/util/List;,349,Hand.canPlay:(Ljava/util/List;)Z
<boot>,0,Card$Suit.<clinit>:()V
com/google/common/collect/HashMultiset.<init>:()V,8,com/google/common/collect/AbstractMapBasedMultiset.<init>:(Ljava/util/Map;)V
<boot>,0,Hand.<clinit>:()V
Card$Rank.<clinit>:()V,156,Card$Rank$12.<init>:(Ljava/lang/String;I)V
com/google/common/collect/SingletonImmutableList.get:(I)Ljava/lang/Object;,2,com/google/common/base/Preconditions.checkElementIndex:(II)I
Hand.playableHand:()Ljava/util/List;,377,com/google/common/collect/ImmutableList.of:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;
Hand.<init>:(LDeck;)V,10,Deck.draw:()LCard;
com/google/common/collect/Iterators$1.<init>:()V,1,com/google/common/collect/UnmodifiableIterator.<init>:()V
Card$Suit.<init>:(Ljava/lang/String;ILCard$1;)V,3,Card$Suit.<init>:(Ljava/lang/String;I)V
Hand.playableHand:()Ljava/util/List;,283,Hand.canPlay:(Ljava/util/List;)Z
com/google/common/collect/HashMultiset.iterator:()Ljava/util/Iterator;,1,com/google/common/collect/AbstractMapBasedMultiset.iterator:()Ljava/util/Iterator;
Hand.getHandValues:()Ljava/util/Map;,92,Deck.cardsAt:(IIII)Ljava/util/List;
Hand.getHandValues:()Ljava/util/Map;,110,com/google/common/collect/ImmutableList.copyOf:(Ljava/util/Collection;)Lcom/google/common/collect/ImmutableList;
com/google/common/base/Joiner.<init>:(Ljava/lang/String;)V,6,com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
com/google/common/collect/NaturalOrdering.<clinit>:()V,4,com/google/common/collect/NaturalOrdering.<init>:()V
com/google/common/collect/EmptyImmutableList$1.<init>:()V,1,com/google/common/collect/UnmodifiableListIterator.<init>:()V
Card$Rank.<clinit>:()V,86,Card$Rank$7.<init>:(Ljava/lang/String;I)V
Hand.canPlay:(Ljava/util/List;)Z,39,Card.getSuit:()LCard$Suit;
Hand.compareTo:(LHand;)I,13,Hand.getHandValues:()Ljava/util/Map;
Distribution.generate:(Ljava/util/Collection;LDeck;)LDistribution;,118,com/google/common/collect/HashMultiset.addAll:(Ljava/util/Collection;)Z
Hand.<init>:(LDeck;)V,14,Deck.draw:()LCard;
com/google/common/collect/ImmutableCollection$EmptyImmutableCollection.<init>:(Lcom/google/common/collect/ImmutableCollection$1;)V,1,com/google/common/collect/ImmutableCollection$EmptyImmutableCollection.<init>:()V
Hand.canPlay:(Ljava/util/List;)Z,78,Card.getRank:()LCard$Rank;
Card$Suit.<clinit>:()V,46,Card$Suit$4.<init>:(Ljava/lang/String;I)V
com/google/common/collect/Iterators.forArray:([Ljava/lang/Object;II)Lcom/google/common/collect/UnmodifiableIterator;,9,com/google/common/base/Preconditions.checkArgument:(Z)V
Hand.compareTo:(LHand;)I,135,Card.getRank:()LCard$Rank;
com/google/common/collect/NaturalOrdering.<init>:()V,1,com/google/common/collect/Ordering.<init>:()V
com/google/common/collect/RegularImmutableList$1.get:(I)Ljava/lang/Object;,4,com/google/common/collect/RegularImmutableList.access$000:(Lcom/google/common/collect/RegularImmutableList;)[Ljava/lang/Object;
com/google/common/collect/AbstractMultiset$EntrySet.iterator:()Ljava/util/Iterator;,4,com/google/common/collect/AbstractMapBasedMultiset.entryIterator:()Ljava/util/Iterator;
com/google/common/collect/TreeMultiset.entrySet:()Ljava/util/Set;,1,com/google/common/collect/AbstractMapBasedMultiset.entrySet:()Ljava/util/Set;
com/google/common/collect/TreeMultiset.create:()Lcom/google/common/collect/TreeMultiset;,4,com/google/common/collect/TreeMultiset.<init>:()V
Hand.canPlay:(Ljava/util/List;)Z,52,Card.getRank:()LCard$Rank;
<boot>,0,com/google/common/collect/NaturalOrdering.<clinit>:()V
Deck.<init>:()V,32,Card$Suit.values:()[LCard$Suit;
Hand.compareTo:(LHand;)I,0,Hand.getHandValues:()Ljava/util/Map;
Card$Rank.<clinit>:()V,100,Card$Rank$8.<init>:(Ljava/lang/String;I)V
com/google/common/collect/AbstractMapBasedMultiset.<init>:(Ljava/util/Map;)V,6,com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
<boot>,0,com/google/common/collect/ImmutableCollection.<clinit>:()V
Hand.playableHand:()Ljava/util/List;,316,Hand.canPlay:(Ljava/util/List;)Z
Test.main:([Ljava/lang/String;)V,9,Deck.shuffle:()LDeck;
com/google/common/collect/ImmutableList.of:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;,16,com/google/common/collect/ImmutableList.construct:([Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;
com/google/common/collect/Lists.computeArrayListCapacity:(I)I,24,com/google/common/primitives/Ints.saturatedCast:(J)I
Hand.draw:(LDeck;Ljava/util/List;)LHand;,1,com/google/common/collect/Lists.newArrayListWithExpectedSize:(I)Ljava/util/ArrayList;
Card$Rank$4.<init>:(Ljava/lang/String;I)V,4,Card$Rank.<init>:(Ljava/lang/String;ILCard$1;)V
Hand.playableHand:()Ljava/util/List;,55,Hand.canPlay:(Ljava/util/List;)Z
com/google/common/collect/Lists.newArrayList:(Ljava/lang/Iterable;)Ljava/util/ArrayList;,1,com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
Hand.getHandValues:()Ljava/util/Map;,74,Deck.size:()I
com/google/common/collect/AbstractMapBasedMultiset.<init>:(Ljava/util/Map;)V,17,com/google/common/collect/AbstractMultiset.size:()I
Deck.<init>:()V,13,Card$Rank.values:()[LCard$Rank;
com/google/common/collect/ImmutableCollection$EmptyImmutableCollection.<init>:()V,1,com/google/common/collect/ImmutableCollection.<init>:()V
Deck.asList:()Ljava/util/List;,4,com/google/common/collect/ImmutableList.copyOf:(Ljava/util/Collection;)Lcom/google/common/collect/ImmutableList;
Hand.playableHand:()Ljava/util/List;,136,com/google/common/collect/ImmutableList.of:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;
Card$Rank.<clinit>:()V,128,Card$Rank$10.<init>:(Ljava/lang/String;I)V
com/google/common/collect/HashMultiset.entrySet:()Ljava/util/Set;,1,com/google/common/collect/AbstractMapBasedMultiset.entrySet:()Ljava/util/Set;
Card$Rank.<clinit>:()V,20,Card$Rank$2.<init>:(Ljava/lang/String;I)V
com/google/common/collect/ImmutableList.copyFromCollection:(Ljava/util/Collection;)Lcom/google/common/collect/ImmutableList;,47,com/google/common/collect/SingletonImmutableList.<init>:(Ljava/lang/Object;)V
Hand.playableHand:()Ljava/util/List;,98,Hand.canPlay:(Ljava/util/List;)Z
com/google/common/collect/Iterators.<clinit>:()V,14,com/google/common/collect/Iterators$2.<init>:()V
com/google/common/collect/ImmutableList.of:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;,12,com/google/common/collect/ImmutableList.construct:([Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;
Distribution.generate:(Ljava/util/Collection;LDeck;)LDistribution;,88,com/google/common/collect/Sets.newHashSet:(Ljava/lang/Iterable;)Ljava/util/HashSet;
com/google/common/collect/AbstractMultiset.addAll:(Ljava/util/Collection;)Z,2,com/google/common/collect/Multisets.addAllImpl:(Lcom/google/common/collect/Multiset;Ljava/util/Collection;)Z
com/google/common/collect/Lists.newArrayList:([Ljava/lang/Object;)Ljava/util/ArrayList;,7,com/google/common/collect/Lists.computeArrayListCapacity:(I)I
Card$Rank$2.<init>:(Ljava/lang/String;I)V,4,Card$Rank.<init>:(Ljava/lang/String;ILCard$1;)V
Deck.<init>:()V,7,com/google/common/collect/Lists.newArrayListWithExpectedSize:(I)Ljava/util/ArrayList;
com/google/common/base/Joiner.on:(Ljava/lang/String;)Lcom/google/common/base/Joiner;,5,com/google/common/base/Joiner.<init>:(Ljava/lang/String;)V
Hand.playableHand:()Ljava/util/List;,50,com/google/common/collect/ImmutableList.of:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;
com/google/common/collect/Iterators.forArray:([Ljava/lang/Object;II)Lcom/google/common/collect/UnmodifiableIterator;,20,com/google/common/base/Preconditions.checkPositionIndexes:(III)V
Card$Rank$13.<init>:(Ljava/lang/String;I)V,4,Card$Rank.<init>:(Ljava/lang/String;ILCard$1;)V
com/google/common/collect/Sets.newHashSet:(Ljava/util/Iterator;)Ljava/util/HashSet;,0,com/google/common/collect/Sets.newHashSet:()Ljava/util/HashSet;
Deck.without:(LCard;)LDeck;,14,Deck.remove:(LCard;)LCard;
com/google/common/collect/AbstractMapBasedMultiset.iterator:()Ljava/util/Iterator;,5,com/google/common/collect/AbstractMapBasedMultiset$MapBasedMultisetIterator.<init>:(Lcom/google/common/collect/AbstractMapBasedMultiset;)V
com/google/common/collect/TreeMultiset.<init>:()V,1,com/google/common/collect/Ordering.natural:()Lcom/google/common/collect/Ordering;
com/google/common/collect/RegularImmutableList$1.get:(I)Ljava/lang/Object;,12,com/google/common/collect/RegularImmutableList.access$100:(Lcom/google/common/collect/RegularImmutableList;)I
Deck.draw:()LCard;,16,Deck.remove:(LCard;)LCard;
com/google/common/collect/Sets.newHashSet:(Ljava/lang/Iterable;)Ljava/util/HashSet;,12,com/google/common/collect/Collections2.cast:(Ljava/lang/Iterable;)Ljava/util/Collection;
com/google/common/collect/Lists.newArrayList:(Ljava/util/Iterator;)Ljava/util/ArrayList;,5,com/google/common/collect/Lists.newArrayList:()Ljava/util/ArrayList;
com/google/common/collect/Iterators.forArray:([Ljava/lang/Object;II)Lcom/google/common/collect/UnmodifiableIterator;,30,com/google/common/collect/Iterators$12.<init>:(I[Ljava/lang/Object;I)V
Hand.getHandValues:()Ljava/util/Map;,44,Deck.size:()I
com/google/common/collect/TreeMultiset.<init>:()V,4,com/google/common/collect/TreeMultiset.<init>:(Ljava/util/Comparator;)V
com/google/common/collect/AbstractIndexedListIterator.next:()Ljava/lang/Object;,27,com/google/common/collect/RegularImmutableList$1.get:(I)Ljava/lang/Object;
Distribution.<init>:(Ljava/util/Collection;)V,16,com/google/common/collect/TreeMultiset.addAll:(Ljava/util/Collection;)Z
com/google/common/collect/Maps.capacity:(I)I,14,com/google/common/base/Preconditions.checkArgument:(Z)V
com/google/common/base/Preconditions.checkElementIndex:(IILjava/lang/String;)I,16,com/google/common/base/Preconditions.badElementIndex:(IILjava/lang/String;)Ljava/lang/String;
Hand.draw:(LDeck;Ljava/util/List;)LHand;,88,Hand.<init>:(Ljava/util/Collection;)V
Hand.playableHand:()Ljava/util/List;,179,com/google/common/collect/ImmutableList.of:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;
com/google/common/collect/RegularImmutableList.iterator:()Ljava/util/Iterator;,1,com/google/common/collect/RegularImmutableList.iterator:()Lcom/google/common/collect/UnmodifiableIterator;
Hand.canPlay:(Ljava/util/List;)Z,26,com/google/common/collect/AbstractIndexedListIterator.next:()Ljava/lang/Object;
Hand.playableHand:()Ljava/util/List;,184,Hand.canPlay:(Ljava/util/List;)Z
Card$Rank$10.<init>:(Ljava/lang/String;I)V,4,Card$Rank.<init>:(Ljava/lang/String;ILCard$1;)V
com/google/common/collect/AbstractMapBasedMultiset$1.next:()Ljava/lang/Object;,1,com/google/common/collect/AbstractMapBasedMultiset$1.next:()Lcom/google/common/collect/Multiset$Entry;
<boot>,0,com/google/common/collect/EmptyImmutableList.<clinit>:()V
com/google/common/collect/RegularImmutableList.iterator:()Lcom/google/common/collect/UnmodifiableIterator;,12,com/google/common/collect/Iterators.forArray:([Ljava/lang/Object;II)Lcom/google/common/collect/UnmodifiableIterator;
Hand.<init>:(LDeck;)V,2,Deck.draw:()LCard;
Card$Rank.<clinit>:()V,33,Card$Rank$3.<init>:(Ljava/lang/String;I)V
com/google/common/collect/Iterators.<clinit>:()V,4,com/google/common/collect/Iterators$1.<init>:()V
Card$Rank.<clinit>:()V,142,Card$Rank$11.<init>:(Ljava/lang/String;I)V
Hand.compareTo:(LHand;)I,113,Card.getRank:()LCard$Rank;
com/google/common/collect/Lists.newArrayList:(Ljava/util/Iterator;)Ljava/util/ArrayList;,1,com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
com/google/common/collect/EmptyImmutableList.get:(I)Ljava/lang/Object;,2,com/google/common/base/Preconditions.checkElementIndex:(II)I
Card$Rank$1.<init>:(Ljava/lang/String;I)V,4,Card$Rank.<init>:(Ljava/lang/String;ILCard$1;)V
Hand.compareTo:(LHand;)I,152,Card.getRank:()LCard$Rank;
Test.main:([Ljava/lang/String;)V,4,Deck.<init>:()V
com/google/common/collect/Maps.newHashMapWithExpectedSize:(I)Ljava/util/HashMap;,5,com/google/common/collect/Maps.capacity:(I)I
Card$Suit$4.<init>:(Ljava/lang/String;I)V,4,Card$Suit.<init>:(Ljava/lang/String;ILCard$1;)V
Test.main:([Ljava/lang/String;)V,132,Deck.draw:()LCard;
Card$Rank$11.<init>:(Ljava/lang/String;I)V,4,Card$Rank.<init>:(Ljava/lang/String;ILCard$1;)V
Card$Rank$8.<init>:(Ljava/lang/String;I)V,4,Card$Rank.<init>:(Ljava/lang/String;ILCard$1;)V
com/google/common/collect/SingletonImmutableList.iterator:()Lcom/google/common/collect/UnmodifiableIterator;,4,com/google/common/collect/Iterators.singletonIterator:(Ljava/lang/Object;)Lcom/google/common/collect/UnmodifiableIterator;
com/google/common/collect/ImmutableCollection.<clinit>:()V,5,com/google/common/collect/ImmutableCollection$EmptyImmutableCollection.<init>:(Lcom/google/common/collect/ImmutableCollection$1;)V
Card$Rank$7.<init>:(Ljava/lang/String;I)V,4,Card$Rank.<init>:(Ljava/lang/String;ILCard$1;)V
Hand.playableHand:()Ljava/util/List;,278,com/google/common/collect/ImmutableList.of:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;
com/google/common/collect/HashMultiset.create:()Lcom/google/common/collect/HashMultiset;,4,com/google/common/collect/HashMultiset.<init>:()V
Hand.canPlay:(Ljava/util/List;)Z,67,Card.getSuit:()LCard$Suit;
Test.main:([Ljava/lang/String;)V,63,Hand.draw:(LDeck;Ljava/util/List;)LHand;
Hand.getHandValues:()Ljava/util/Map;,107,Hand.playableHand:()Ljava/util/List;
com/google/common/collect/TreeMultiset.iterator:()Ljava/util/Iterator;,1,com/google/common/collect/AbstractMapBasedMultiset.iterator:()Ljava/util/Iterator;
com/google/common/collect/HashMultiset.addAll:(Ljava/util/Collection;)Z,2,com/google/common/collect/AbstractMultiset.addAll:(Ljava/util/Collection;)Z
Card$Suit.<clinit>:()V,7,Card$Suit$1.<init>:(Ljava/lang/String;I)V
Card$Rank$5.<init>:(Ljava/lang/String;I)V,4,Card$Rank.<init>:(Ljava/lang/String;ILCard$1;)V
com/google/common/collect/Multisets.unmodifiableMultiset:(Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;,23,com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
Hand.getHandValues:()Ljava/util/Map;,8,com/google/common/collect/Maps.newHashMapWithExpectedSize:(I)Ljava/util/HashMap;
Hand.playableHand:()Ljava/util/List;,141,Hand.canPlay:(Ljava/util/List;)Z
Hand.playableHand:()Ljava/util/List;,400,com/google/common/collect/ImmutableList.of:(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;
com/google/common/collect/Collections2.<clinit>:()V,2,com/google/common/base/Joiner.on:(Ljava/lang/String;)Lcom/google/common/base/Joiner;
Deck.<init>:(Ljava/util/List;)V,11,com/google/common/collect/Lists.newArrayListWithExpectedSize:(I)Ljava/util/ArrayList;
com/google/common/collect/Lists.newArrayList:([Ljava/lang/Object;)Ljava/util/ArrayList;,1,com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
Card$Rank$12.<init>:(Ljava/lang/String;I)V,4,Card$Rank.<init>:(Ljava/lang/String;ILCard$1;)V
com/google/common/collect/UnmodifiableListIterator.<init>:()V,1,com/google/common/collect/UnmodifiableIterator.<init>:()V
Card$Rank$3.<init>:(Ljava/lang/String;I)V,4,Card$Rank.<init>:(Ljava/lang/String;ILCard$1;)V
Hand.playableHand:()Ljava/util/List;,93,com/google/common/collect/ImmutableList.of:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;
com/google/common/collect/EmptyImmutableList.iterator:()Ljava/util/Iterator;,1,com/google/common/collect/EmptyImmutableList.iterator:()Lcom/google/common/collect/UnmodifiableIterator;
Hand.compareTo:(LHand;)I,96,Card.getRank:()LCard$Rank;
com/google/common/base/Joiner.withKeyValueSeparator:(Ljava/lang/String;)Lcom/google/common/base/Joiner$MapJoiner;,7,com/google/common/base/Joiner$MapJoiner.<init>:(Lcom/google/common/base/Joiner;Ljava/lang/String;Lcom/google/common/base/Joiner$1;)V
com/google/common/collect/ImmutableList.copyFromCollection:(Ljava/util/Collection;)Lcom/google/common/collect/ImmutableList;,36,com/google/common/collect/ImmutableList.of:()Lcom/google/common/collect/ImmutableList;
Distribution.generate:(Ljava/util/Collection;LDeck;)LDistribution;,29,com/google/common/collect/Lists.newArrayList:([Ljava/lang/Object;)Ljava/util/ArrayList;
Card$Rank.<clinit>:()V,72,Card$Rank$6.<init>:(Ljava/lang/String;I)V
com/google/common/collect/ImmutableList.copyOf:(Ljava/util/Collection;)Lcom/google/common/collect/ImmutableList;,11,com/google/common/collect/ImmutableList.asList:()Lcom/google/common/collect/ImmutableList;
Card$Suit.<clinit>:()V,20,Card$Suit$2.<init>:(Ljava/lang/String;I)V
Hand.<init>:(Ljava/util/Collection;)V,24,com/google/common/collect/Lists.newArrayList:(Ljava/lang/Iterable;)Ljava/util/ArrayList;
Test.main:([Ljava/lang/String;)V,18,Hand.<init>:(LDeck;)V
com/google/common/collect/AbstractMapBasedMultiset.<init>:(Ljava/util/Map;)V,1,com/google/common/collect/AbstractMultiset.<init>:()V
Hand.playableHand:()Ljava/util/List;,212,com/google/common/collect/ImmutableList.of:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;
Distribution.generate:(Ljava/util/Collection;LDeck;)LDistribution;,36,com/google/common/collect/HashMultiset.create:()Lcom/google/common/collect/HashMultiset;
<boot>,0,Card$Rank.<clinit>:()V
com/google/common/collect/ImmutableList.copyFromCollection:(Ljava/util/Collection;)Lcom/google/common/collect/ImmutableList;,54,com/google/common/collect/ImmutableList.construct:([Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;
Hand.draw:(LDeck;Ljava/util/List;)LHand;,71,Deck.draw:()LCard;
com/google/common/collect/Lists.newArrayListWithExpectedSize:(I)Ljava/util/ArrayList;,5,com/google/common/collect/Lists.computeArrayListCapacity:(I)I
Distribution.getHands:()Ljava/util/Collection;,4,com/google/common/collect/Multisets.unmodifiableMultiset:(Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;
com/google/common/collect/AbstractIndexedListIterator.next:()Ljava/lang/Object;,1,com/google/common/collect/AbstractIndexedListIterator.hasNext:()Z
com/google/common/base/Preconditions.checkElementIndex:(II)I,4,com/google/common/base/Preconditions.checkElementIndex:(IILjava/lang/String;)I
Hand.playableHand:()Ljava/util/List;,217,Hand.canPlay:(Ljava/util/List;)Z
com/google/common/collect/Multisets.addAllImpl:(Lcom/google/common/collect/Multiset;Ljava/util/Collection;)Z,29,com/google/common/collect/AbstractMultiset$EntrySet.iterator:()Ljava/util/Iterator;
Hand.playableHand:()Ljava/util/List;,250,Hand.canPlay:(Ljava/util/List;)Z
Hand.getHandValues:()Ljava/util/Map;,30,Deck.size:()I
